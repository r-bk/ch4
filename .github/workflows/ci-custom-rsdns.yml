name: ci-custom-rsdns

on:
  push:
    branches:
      - '**-custom'
  pull_request:

env:
  CARGO_TERM_COLOR: always

jobs:
  ci:
    runs-on: ${{ matrix.runs_on }}
    strategy:
      matrix:
        rust:
          - stable
          - beta
          - 1.70.0  # MSRV
        runs_on:
          - ubuntu-latest
          - windows-latest
          - macos-latest
        feature:
          - net-std
          - net-async-std
          - net-tokio
          - net-smol
          - default
        include:
          - runs_on: ubuntu-latest
            feature: net-tokio,socket2
            rust: stable
          - runs_on: ubuntu-latest
            feature: net-tokio,socket2
            rust: beta
          - runs_on: ubuntu-latest
            feature: net-tokio,socket2
            rust: 1.70.0  # MSRV
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true

      - uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - uses: jannekem/run-python-script-action@v1
        with:
          script: |
            lines = []
            with open("Cargo.toml", "r") as cargo:
                lines = cargo.readlines()

            for i in range(len(lines)):
                if lines[i] == '# path = "dep/rsdns"\n':
                    lines[i] = 'path = "dep/rsdns"\n'
                    print('rsdns path set to "dep/rsdns"')

            with open("Cargo.toml", "w") as cargo:
                cargo.write(''.join(lines))
            print('Cargo.toml updated succcessfully')

      - uses: dtolnay/rust-toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          components: rustfmt,clippy

      - name: build ch4
        run: cargo build --no-default-features --features ${{ matrix.feature }}

      - name: show ch4 info
        if: ${{ !(matrix.feature == 'net-async-std' && matrix.runs_on == 'windows-latest') }}
        env:
          RUST_BACKTRACE: "full"
        run: cargo run --no-default-features --features ${{ matrix.feature }} -- --info

      - name: ch4 list nameservers
        if: ${{ !(matrix.feature == 'net-async-std' && matrix.runs_on == 'windows-latest') }}
        env:
          RUST_BACKTRACE: "full"
        run: cargo run --no-default-features --features ${{ matrix.feature }} -- --list-nameservers

      - name: test ch4
        run: cargo test --no-default-features --features ${{ matrix.feature }}

      - name: lint ch4
        run: cargo clippy --no-default-features --features ${{ matrix.feature }} -- -D warnings

  common-ci:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@v1
        with:
          toolchain: nightly
          components: rustfmt
      - name: format all
        run: cargo fmt -- --check
